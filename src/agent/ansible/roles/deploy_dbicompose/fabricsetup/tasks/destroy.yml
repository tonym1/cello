---
- name: Setup variables
  set_fact:
    current_host: "{{ hostvars[inventory_hostname].inter_name }}"
    dbipath: "/home/{{ fabric.ssh_user }}/dbi"
    fabricworkdir: "/opt/gopath/{{ env }}/test/fixtures-V1"
    clihost: "{{ groups['builders'] }}"

- name: Check docker compose file stats
  stat:
    path: "{{ fabricworkdir }}/run/{{ item }}.yml"
  register: cfiles
  with_items:
    - "zookeeper-compose"
    - "kafka-compose"
    - "ca-compose"
    - "orderer-compose"
    - "peer-compose"

- name: Zip dbi ansible directory
  archive:
    path: "{{ dbipath }}/ansible"
    dest: "{{ dbipath }}/dbi_ansible.tgz"

- name: Shut down fabric components
  command: "docker-compose -p {{ env }}.{{ item.item }} -f {{ fabricworkdir }}/run/{{ item.item }}.yml down"
  when: item.stat.exists == true
  with_items: "{{ cfiles.results }}"
  no_log: true

- name: Check if there are dead containers
  command: docker ps -a -f status=exited -q
  register: deadcontainers

- name: Clean up the finished containers as well
  shell: docker rm -f $(docker ps -a -f status=exited -q)
  when: deadcontainers.stdout_lines | length > 0
  no_log: true

- name: Test if there are any chaincode container images
  shell: docker images | grep "dev-*" | cat | awk '{print $1}'
  register: images
  no_log: true

- name: Remove these chaincode container images
  shell: docker images | grep "dev-*" | cat | awk '{print $1}' | xargs docker rmi -f
  when: images.stdout != ""
  no_log: true

- name: Test if there are any Fabric containers
  shell: docker ps | grep "hyper*" | cat | awk '{print $1}'
  register: ctrs
  no_log: true

- name: Remove any hyperledger containers
  shell: docker ps -a | grep "hyper*" | cat | awk '{print $1}' | xargs docker rm -f
  when: ctrs.stdout != ""
  no_log: true

- name: Clean up the working directory
  become: true
  become_user: root
  file:
    path: "{{ fabricworkdir }}/run"
    state: absent

- name: Remove network config
  file:
    path: "{{ dbipath }}/{{ item }}"
    state: absent
  with_items:
    - "credentials.js"
    - "network.yaml"
    - "org1.yaml"
    - "org2.yaml"

